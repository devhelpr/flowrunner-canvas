/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["flowcanvaswebpackJsonpPlugin"] = self["flowcanvaswebpackJsonpPlugin"] || []).push([["packages_flowrunner-canvas-core_lib_html-plugins_visualizers_grid-canvas_js"],{

/***/ "../../packages/flowrunner-canvas-core/lib/html-plugins/visualizers/grid-canvas.js":
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"GridCanvas\": () => (/* binding */ GridCanvas)\n/* harmony export */ });\n/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(\"../../node_modules/react/jsx-runtime.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(\"../../node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var react_konva__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(\"../../node_modules/react-konva/es/ReactKonva.js\");\n\n\n\nclass GridCanvas extends react__WEBPACK_IMPORTED_MODULE_1__.Component {\n    constructor() {\n        super(...arguments);\n        this.state = {};\n    }\n    componentDidMount() {\n    }\n    getWidth() {\n        return ((this.props.node.columns || 8) * 16);\n    }\n    getHeight() {\n        return ((this.props.node.rows || 8) * 16);\n    }\n    render() {\n        let circles = null;\n        let { node, payloads } = this.props;\n        let list = (node.mode === \"matrix\" ? ((payloads[payloads.length - 1] || { data: [] }).data || []) : payloads);\n        let currentPayload = payloads[payloads.length - 1];\n        circles = list.map((payload, index) => {\n            let circle = null;\n            if (node.mode === \"matrix\") {\n                let x = index % (currentPayload.columns);\n                let y = Math.floor(index / currentPayload.rows);\n                if (payload >= 1 || payload <= -1) {\n                    circle = (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(react_konva__WEBPACK_IMPORTED_MODULE_2__.Circle, { x: (x * 16) + 8, y: (y * 16) + 8, radius: 16, stroke: payload <= -1 ? \"#ff0000\" : \"#000000\", strokeWidth: 2, width: 16, height: 16, opacity: 1, fill: payload <= -1 ? \"#ff0000\" : \"#000000\", perfectDrawEnabled: false }, \"xycanvasgrid-\" + index);\n                }\n                else if (payload != 0) {\n                    circle = (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(react_konva__WEBPACK_IMPORTED_MODULE_2__.Circle, { x: (x * 16) + 8, y: (y * 16) + 8, radius: 16 * Math.abs(payload), stroke: payload < 0 ? \"#ff0000\" : \"#000000\", strokeWidth: 2, width: 16 * Math.abs(payload), height: 16 * Math.abs(payload), opacity: 1, fill: payload < 0 ? \"#ff0000\" : \"#000000\", perfectDrawEnabled: false }, \"xycanvasgrid-\" + index);\n                }\n            }\n            else if (node.mode !== \"matrix\" && node.xProperty && node.yProperty) {\n                if (!isNaN(payload[node.xProperty]) && !isNaN(payload[node.yProperty])) {\n                    const opacity = node.ageProperty ? (payload[node.ageProperty] || (payload[node.ageProperty] === 0 ? 0 : 1)) : ((index + 1) / (payloads.length * 2));\n                    let indexNextLine = index + 1;\n                    if (index >= payloads.length - 1) {\n                        indexNextLine = 0;\n                    }\n                    circle = (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(react__WEBPACK_IMPORTED_MODULE_1__.Fragment, { children: [!!node.includeLines &&\n                                index < indexNextLine &&\n                                payload[node.xProperty] < payloads[indexNextLine][node.xProperty] &&\n                                (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(react_konva__WEBPACK_IMPORTED_MODULE_2__.Line, { points: [\n                                        payload[node.xProperty] * 16,\n                                        payload[node.yProperty] * 16,\n                                        payloads[indexNextLine][node.xProperty] * 16,\n                                        payloads[indexNextLine][node.yProperty] * 16\n                                    ], tension: 0.5, opacity: opacity, stroke: \"black\" }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(react_konva__WEBPACK_IMPORTED_MODULE_2__.Circle, { x: (payload[node.xProperty] * 16), y: (payload[node.yProperty] * 16), radius: 16, stroke: \"#000000\", strokeWidth: 2, width: 16, height: 16, opacity: opacity, fill: \"#000000\", perfectDrawEnabled: false }, \"xycanvasgrid-\" + index)] }, \"xycanvas-wrapper\" + index);\n                }\n            }\n            return circle;\n        });\n        list = null;\n        currentPayload = null;\n        node = null;\n        payloads = null;\n        return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(react_konva__WEBPACK_IMPORTED_MODULE_2__.Stage, { pixelRatio: 1, width: this.getWidth() || this.props.node.width || 250, height: this.getHeight() || this.props.node.height || 250, children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(react_konva__WEBPACK_IMPORTED_MODULE_2__.Layer, { children: circles }) });\n    }\n}\n//# sourceMappingURL=grid-canvas.js.map\n\n//# sourceURL=webpack://code-flow-canvas/../../packages/flowrunner-canvas-core/lib/html-plugins/visualizers/grid-canvas.js?");

/***/ })

}]);