import * as React from 'react';
import { IFlowrunnerConnector } from '../../../interfaces/IFlowrunnerConnector';
import { IFlowState } from '../../../state/flow-state';
import { Subject } from 'rxjs';
export interface IHtmlNodeProps {
    hasTaskNameAsNodeTitle?: boolean;
    node: any;
    flowrunnerConnector: IFlowrunnerConnector;
    nodesStateLocal: any;
    getNodeInstance: any;
    onCloneNode: any;
    canvasHasSelectedNode: boolean;
    onFocus: any;
    onShowNodeSettings: any;
    renderHtmlNode: any;
    flowId?: string | number;
    flowMemo: any;
    onShowNodeEditor: any;
    formNodesubject?: Subject<any>;
    onMouseStart: any;
    onMouseOver: any;
    onMouseOut: any;
    onTouchStart: any;
    onMouseEnd: any;
    onMouseMove: any;
    onMouseLeave: any;
    onClickShape: any;
    onMouseConnectionStartOver: any;
    onMouseConnectionStartOut: any;
    onMouseConnectionStartStart: any;
    onMouseConnectionStartMove: any;
    onMouseConnectionStartEnd: any;
    onMouseConnectionEndOver: any;
    onMouseConnectionEndOut: any;
    onMouseConnectionEndStart: any;
    onMouseConnectionEndMove: any;
    onMouseConnectionEndEnd: any;
    onMouseConnectionEndLeave: any;
    useFlowStore: () => IFlowState;
}
export declare const HtmlNode: React.ForwardRefExoticComponent<IHtmlNodeProps & React.RefAttributes<unknown>>;
