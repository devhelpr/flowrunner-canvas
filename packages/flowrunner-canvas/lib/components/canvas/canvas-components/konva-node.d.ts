import { IFlowrunnerConnector } from '../../../interfaces/IFlowrunnerConnector';
import { IFlowState } from '../../../state/flow-state';
export interface IKonvaNodeProps {
    hasTaskNameAsNodeTitle?: boolean;
    node: any;
    flowrunnerConnector: IFlowrunnerConnector;
    nodesStateLocal: any;
    getNodeInstance: any;
    onCloneNode: any;
    canvasHasSelectedNode: boolean;
    onFocus: any;
    onShowNodeSettings: any;
    renderHtmlNode: any;
    flowId?: string | number;
    flowMemo: any;
    nodesConnectedToSelectedNode: any;
    shapeRefs: any;
    onMouseStart: any;
    onMouseOver: any;
    onMouseOut: any;
    onClickLine: any;
    onClickSetup: any;
    onClickShape: any;
    onDragStart: any;
    onDragEnd: any;
    onDragMove: any;
    onTouchStart: any;
    onMouseEnd: any;
    onMouseMove: any;
    onMouseLeave: any;
    onMouseConnectionStartOver: any;
    onMouseConnectionStartOut: any;
    onMouseConnectionStartStart: any;
    onMouseConnectionStartMove: any;
    onMouseConnectionStartEnd: any;
    onMouseConnectionEndOver: any;
    onMouseConnectionEndOut: any;
    onMouseConnectionEndStart: any;
    onMouseConnectionEndMove: any;
    onMouseConnectionEndEnd: any;
    onMouseConnectionEndLeave: any;
    useFlowStore: () => IFlowState;
}
export declare const KonvaNode: (props: IKonvaNodeProps) => JSX.Element | null;
