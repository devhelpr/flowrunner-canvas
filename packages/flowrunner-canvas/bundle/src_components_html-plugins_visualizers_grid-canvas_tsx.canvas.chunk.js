/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["flowcanvaswebpackJsonpPlugin"] = self["flowcanvaswebpackJsonpPlugin"] || []).push([["src_components_html-plugins_visualizers_grid-canvas_tsx"],{

/***/ "./src/components/html-plugins/visualizers/grid-canvas.tsx":
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"GridCanvas\": () => (/* binding */ GridCanvas)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(\"../../node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react_konva__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(\"../../node_modules/react-konva/es/ReactKonva.js\");\n\n\nclass GridCanvas extends react__WEBPACK_IMPORTED_MODULE_0__.Component {\n  constructor() {\n    super(...arguments);\n    this.state = {};\n  }\n  componentDidMount() {\n  }\n  getWidth() {\n    return (this.props.node.columns || 8) * 16;\n  }\n  getHeight() {\n    return (this.props.node.rows || 8) * 16;\n  }\n  render() {\n    let circles = null;\n    let {node, payloads} = this.props;\n    let list = node.mode === \"matrix\" ? (payloads[payloads.length - 1] || {data: []}).data || [] : payloads;\n    let currentPayload = payloads[payloads.length - 1];\n    circles = list.map((payload, index) => {\n      let circle = null;\n      if (node.mode === \"matrix\") {\n        let x = index % currentPayload.columns;\n        let y = Math.floor(index / currentPayload.rows);\n        if (payload >= 1 || payload <= -1) {\n          circle = /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(react_konva__WEBPACK_IMPORTED_MODULE_1__.Circle, {\n            key: \"xycanvasgrid-\" + index,\n            x: x * 16 + 8,\n            y: y * 16 + 8,\n            radius: 16,\n            stroke: payload <= -1 ? \"#ff0000\" : \"#000000\",\n            strokeWidth: 2,\n            width: 16,\n            height: 16,\n            opacity: 1,\n            fill: payload <= -1 ? \"#ff0000\" : \"#000000\",\n            perfectDrawEnabled: false\n          });\n        } else if (payload != 0) {\n          circle = /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(react_konva__WEBPACK_IMPORTED_MODULE_1__.Circle, {\n            key: \"xycanvasgrid-\" + index,\n            x: x * 16 + 8,\n            y: y * 16 + 8,\n            radius: 16 * Math.abs(payload),\n            stroke: payload < 0 ? \"#ff0000\" : \"#000000\",\n            strokeWidth: 2,\n            width: 16 * Math.abs(payload),\n            height: 16 * Math.abs(payload),\n            opacity: 1,\n            fill: payload < 0 ? \"#ff0000\" : \"#000000\",\n            perfectDrawEnabled: false\n          });\n        }\n      } else if (node.mode !== \"matrix\" && node.xProperty && node.yProperty) {\n        if (!isNaN(payload[node.xProperty]) && !isNaN(payload[node.yProperty])) {\n          const opacity = node.ageProperty ? payload[node.ageProperty] || (payload[node.ageProperty] === 0 ? 0 : 1) : (index + 1) / (payloads.length * 2);\n          let indexNextLine = index + 1;\n          if (index >= payloads.length - 1) {\n            indexNextLine = 0;\n          }\n          circle = /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(react__WEBPACK_IMPORTED_MODULE_0__.Fragment, {\n            key: \"xycanvas-wrapper\" + index\n          }, !!node.includeLines && index < indexNextLine && payload[node.xProperty] < payloads[indexNextLine][node.xProperty] && /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(react_konva__WEBPACK_IMPORTED_MODULE_1__.Line, {\n            points: [\n              payload[node.xProperty] * 16,\n              payload[node.yProperty] * 16,\n              payloads[indexNextLine][node.xProperty] * 16,\n              payloads[indexNextLine][node.yProperty] * 16\n            ],\n            tension: 0.5,\n            opacity,\n            stroke: \"black\"\n          }), /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(react_konva__WEBPACK_IMPORTED_MODULE_1__.Circle, {\n            key: \"xycanvasgrid-\" + index,\n            x: payload[node.xProperty] * 16,\n            y: payload[node.yProperty] * 16,\n            radius: 16,\n            stroke: \"#000000\",\n            strokeWidth: 2,\n            width: 16,\n            height: 16,\n            opacity,\n            fill: \"#000000\",\n            perfectDrawEnabled: false\n          }));\n        }\n      }\n      return circle;\n    });\n    list = null;\n    currentPayload = null;\n    node = null;\n    payloads = null;\n    return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(react_konva__WEBPACK_IMPORTED_MODULE_1__.Stage, {\n      pixelRatio: 1,\n      width: this.getWidth() || this.props.node.width || 250,\n      height: this.getHeight() || this.props.node.height || 250\n    }, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(react_konva__WEBPACK_IMPORTED_MODULE_1__.Layer, null, circles));\n  }\n}\n\n\n//# sourceURL=webpack://@devhelpr/flowrunner-canvas/./src/components/html-plugins/visualizers/grid-canvas.tsx?");

/***/ })

}]);