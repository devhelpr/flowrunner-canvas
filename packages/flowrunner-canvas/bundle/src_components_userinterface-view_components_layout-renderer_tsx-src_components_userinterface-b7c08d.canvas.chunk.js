/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["flowcanvaswebpackJsonpPlugin"] = self["flowcanvaswebpackJsonpPlugin"] || []).push([["src_components_userinterface-view_components_layout-renderer_tsx-src_components_userinterface-b7c08d"],{

/***/ "./src/components/userinterface-view/components/layout-renderer.tsx":
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"renderFlowNode\": () => (/* binding */ renderFlowNode),\n/* harmony export */   \"renderLayoutType\": () => (/* binding */ renderLayoutType)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(\"../../node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _helpers_flow_to_canvas__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(\"./src/helpers/flow-to-canvas.ts\");\n/* harmony import */ var _helpers_shape_settings__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(\"./src/helpers/shape-settings.ts\");\n/* harmony import */ var _multi_form__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(\"./src/components/userinterface-view/components/multi-form.tsx\");\n\n\n\n\nconst renderFlowNode = (node, rootLayout, isInEditMode = false) => {\n  if (!!node.hideFromUI) {\n    return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0___default().createElement((react__WEBPACK_IMPORTED_MODULE_0___default().Fragment), null);\n  }\n  const onShowNodeSettings = () => {\n  };\n  let shapeType = _helpers_flow_to_canvas__WEBPACK_IMPORTED_MODULE_1__.FlowToCanvas.getShapeType(node.shapeType, node.taskType, node.isStartEnd);\n  const settings = _helpers_shape_settings__WEBPACK_IMPORTED_MODULE_2__.ShapeSettings.getShapeSettings(node.taskType, node);\n  if (shapeType === \"Html\" && !!settings.hasUI) {\n    const nodeClone = {...node};\n    const isSelected = false;\n    nodeClone.htmlPlugin = node.htmlPlugin || settings.htmlPlugin || \"\";\n    let width = void 0;\n    let height = void 0;\n    if (rootLayout.context.getNodeInstance) {\n      const instance = rootLayout.context.getNodeInstance(node, rootLayout.context.flowrunnerConnector, rootLayout.context.flow, settings);\n      if (instance) {\n        if (instance.getWidth && instance.getHeight) {\n          width = instance.getWidth(node);\n          height = instance.getHeight(node);\n        }\n      }\n    }\n    if (settings.uiComponent && settings.uiComponent == \"MultiForm\") {\n      return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_multi_form__WEBPACK_IMPORTED_MODULE_3__.MultiForm, {\n        node: nodeClone,\n        settings,\n        renderHtmlNode: rootLayout.context.renderHtmlNode,\n        getNodeInstance: rootLayout.context.getNodeInstance,\n        flowrunnerConnector: rootLayout.context.flowrunnerConnector\n      });\n    }\n    return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", {\n      style: {\n        width: (width || node.width || 250) + \"px\",\n        minHeight: (height || node.height || 250) + \"px\",\n        height: \"auto\",\n        opacity: 1,\n        position: \"relative\"\n      },\n      id: node.name,\n      \"data-task\": node.taskType,\n      \"data-node\": node.name,\n      \"data-html-plugin\": nodeClone.htmlPlugin,\n      \"data-node-type\": node.taskType,\n      \"data-visualizer\": nodeClone.visualizer || \"\",\n      \"data-x\": node.x,\n      \"data-y\": node.y,\n      className: \"canvas__html-shape untouched\"\n    }, !!isInEditMode && settings && !!settings.hasConfigMenu && /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", {\n      className: \"\"\n    }, false), /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", {\n      className: \"canvas__html-shape-body\"\n    }, rootLayout.context.renderHtmlNode && rootLayout.context.renderHtmlNode(nodeClone, rootLayout.context.flowrunnerConnector, rootLayout.context.flow, settings)));\n  }\n};\nconst renderLayoutType = (layoutBlock, isInForm, form, setLayoutVisibleState, rootLayout) => {\n  if (layoutBlock.type === \"layout2columns\") {\n    if (!layoutBlock.layout && layoutBlock.layout.length !== 2) {\n      return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0___default().createElement((react__WEBPACK_IMPORTED_MODULE_0___default().Fragment), null);\n    }\n    return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", {\n      className: \"layout-container__layout2columns\"\n    }, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", {\n      className: \"row\"\n    }, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", {\n      className: \"col-12 col-md-6\"\n    }, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", {\n      className: \"ui-view-layout__container-row layout-container__layout2columns-col-1\"\n    }, layoutBlock.layout[0].map((layout, index) => {\n      return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0___default().createElement((react__WEBPACK_IMPORTED_MODULE_0___default().Fragment), {\n        key: \"layout-\" + index\n      }, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", {\n        className: \"ui-view-layout__container d-flex flex-row justify-content-center\"\n      }, renderLayoutType(layout, isInForm, form, setLayoutVisibleState, rootLayout)));\n    }))), /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", {\n      className: \"col-12 col-md-6 \"\n    }, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", {\n      className: \"ui-view-layout__container-row layout-container__layout2columns-col-2\"\n    }, layoutBlock.layout[1].map((layout, index) => {\n      return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0___default().createElement((react__WEBPACK_IMPORTED_MODULE_0___default().Fragment), {\n        key: \"layout-\" + index\n      }, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", {\n        className: \"ui-view-layout__container d-flex flex-row justify-content-center\"\n      }, renderLayoutType(layout, isInForm, form, setLayoutVisibleState, rootLayout)));\n    })))));\n  } else if (layoutBlock.type === \"layout\") {\n    if (!layoutBlock.layout) {\n      return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0___default().createElement((react__WEBPACK_IMPORTED_MODULE_0___default().Fragment), null);\n    }\n    return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0___default().createElement((react__WEBPACK_IMPORTED_MODULE_0___default().Fragment), null, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", {\n      className: \"row\"\n    }, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", {\n      className: \"col-12 ui-view-layout__container-row\"\n    }, layoutBlock.layout.map((layout, index) => {\n      return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0___default().createElement((react__WEBPACK_IMPORTED_MODULE_0___default().Fragment), {\n        key: \"layout-\" + index\n      }, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", {\n        className: \"ui-view-layout__container d-flex flex-row justify-content-center\"\n      }, renderLayoutType(layout, isInForm, form, setLayoutVisibleState, rootLayout)));\n    }))));\n  } else if (layoutBlock.type === \"element\") {\n    return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", null, layoutBlock.title || \"\");\n  } else if (layoutBlock.type === \"flowNode\") {\n    const node = rootLayout.context.flowHash[layoutBlock.subtitle];\n    if (node) {\n      return renderFlowNode(node, rootLayout, false);\n    }\n    return null;\n  }\n  return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0___default().createElement((react__WEBPACK_IMPORTED_MODULE_0___default().Fragment), null);\n};\n\n\n//# sourceURL=webpack://@devhelpr/flowrunner-canvas/./src/components/userinterface-view/components/layout-renderer.tsx?");

/***/ }),

/***/ "./src/components/userinterface-view/components/multi-form.tsx":
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"MultiForm\": () => (/* binding */ MultiForm)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(\"../../node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _flow_connector__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(\"./src/flow-connector/index.ts\");\n/* harmony import */ var _userinterface_view_multi_form_view__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(\"./src/components/userinterface-view/multi-form-view.tsx\");\n/* harmony import */ var _flow_agent__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(\"./src/flow-agent.ts\");\n\n\n\n\n\nconst MultiForm = (props) => {\n  const [formStep, setFormStep] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(0);\n  const [flowEnabled, setFlowEnabled] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(false);\n  const workerRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null);\n  const flowrunnerConnector = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null);\n  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {\n    workerRef.current = (0,_flow_agent__WEBPACK_IMPORTED_MODULE_3__.getFlowAgent)();\n    workerRef.current.postMessage(\"worker\", {\n      command: \"init\"\n    });\n    flowrunnerConnector.current = new _flow_connector__WEBPACK_IMPORTED_MODULE_1__.FlowConnector();\n    flowrunnerConnector.current.registerWorker(workerRef.current);\n    setFlowEnabled(true);\n    return () => {\n      if (workerRef.current) {\n        workerRef.current.terminate();\n        workerRef.current = null;\n      }\n    };\n  }, [props.node, formStep]);\n  const onNextStep = (event) => {\n    event.preventDefault();\n    if (formStep < props.node?.formFlows?.length - 1) {\n      setFlowEnabled(false);\n      setFormStep(formStep + 1);\n    }\n    return false;\n  };\n  const onPreviousStep = (event) => {\n    event.preventDefault();\n    if (formStep > 0) {\n      setFlowEnabled(false);\n      setFormStep(formStep - 1);\n    }\n    return false;\n  };\n  return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0___default().createElement((react__WEBPACK_IMPORTED_MODULE_0___default().Fragment), null, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"p\", null, \"MultiForm form-step: \", formStep + 1, \" / \", props.node?.formFlows?.length), /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", null, flowEnabled && props.node && props.node.formFlows && props.node.formFlows.length > 0 && /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", {\n    className: \"card\"\n  }, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", {\n    className: \"card-body\"\n  }, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_userinterface_view_multi_form_view__WEBPACK_IMPORTED_MODULE_2__.MultiFormView, {\n    renderHtmlNode: props.renderHtmlNode,\n    getNodeInstance: props.getNodeInstance,\n    flowrunnerConnector: flowrunnerConnector.current,\n    flowId: props.node.formFlows[formStep].flowId\n  })))), /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", {\n    className: \"row mt-2\"\n  }, formStep > 0 && /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", {\n    className: \"col-auto\"\n  }, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"button\", {\n    className: \"btn btn-outline-primary\",\n    onClick: onPreviousStep\n  }, \"Previous\")), formStep < props.node?.formFlows?.length - 1 && /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", {\n    className: \"col-auto\"\n  }, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"button\", {\n    className: \"btn btn-primary\",\n    onClick: onNextStep\n  }, \"Next\"))));\n};\n\n\n//# sourceURL=webpack://@devhelpr/flowrunner-canvas/./src/components/userinterface-view/components/multi-form.tsx?");

/***/ }),

/***/ "./src/components/userinterface-view/multi-form-view.tsx":
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"MultiFormView\": () => (/* binding */ MultiFormView)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(\"../../node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var uuid__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(\"./node_modules/uuid/dist/esm-browser/v4.js\");\n/* harmony import */ var _devhelpr_layoutrunner__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(\"../../node_modules/@devhelpr/layoutrunner/dist/layoutrunner.esm.js\");\n/* harmony import */ var _components_layout_renderer__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(\"./src/components/userinterface-view/components/layout-renderer.tsx\");\n/* harmony import */ var _flow__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(\"./src/components/flow/index.tsx\");\n/* harmony import */ var cross_fetch__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(\"../../node_modules/cross-fetch/dist/browser-ponyfill.js\");\n/* harmony import */ var cross_fetch__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(cross_fetch__WEBPACK_IMPORTED_MODULE_4__);\n/* harmony import */ var _state_flow_state__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(\"./src/state/flow-state.ts\");\n/* harmony import */ var _state_layout_state__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(\"./src/state/layout-state.ts\");\n/* harmony import */ var _state_canvas_mode_state__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(\"./src/state/canvas-mode-state.ts\");\n\n\n\n\n\n\n\n\n\n\nconst uuidV4 = uuid__WEBPACK_IMPORTED_MODULE_8__.default;\nconst MultiFormView = (props) => {\n  const [flowName, setFlowName] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(\"\");\n  const [flowHash, setFlowHash] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)({});\n  const [titleBarBackgroundcolor, setTitleBarBackgroundcolor] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(\"\");\n  const [titleBarTitle, setTitleBarTitle] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(\"\");\n  const [titleBarColor, setTitleBarColor] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(\"\");\n  const [titleBarFont, setTitleBarFont] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(\"\");\n  const [titleBarFontSize, setTitleBarFontSize] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(\"\");\n  const [titleBarFontWeight, setTitleBarFontWeight] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(\"\");\n  const [layoutTree, setLayoutTree] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)({});\n  const [isFlowLoaded, setIsFlowLoaded] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(false);\n  const unmounted = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(false);\n  const layoutTreeAsString = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(\"\");\n  const flow = (0,_state_flow_state__WEBPACK_IMPORTED_MODULE_5__.useFlowForMultiFormStore)();\n  const canvasMode = (0,_state_canvas_mode_state__WEBPACK_IMPORTED_MODULE_7__.useCanvasModeStateForMultiFormStore)();\n  const layout = (0,_state_layout_state__WEBPACK_IMPORTED_MODULE_6__.useLayoutForMultiFormStore)();\n  let nodesStateLocal = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)({});\n  let touchedNodesLocal = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)({});\n  const getLayoutNodeFromTree = (level, index, subIndex) => {\n    let treeHashKey = level + \".\" + index + \".\" + subIndex;\n    if (layoutTreeAsString.current && layoutTreeAsString.current[treeHashKey]) {\n      let tree = layoutTreeAsString.current[treeHashKey];\n      let layoutTreeNode = [];\n      tree.map((layoutBlock, treeIndex) => {\n        if (layoutBlock.title == \"element\") {\n          layoutTreeNode.push({\n            type: \"element\",\n            title: layoutBlock.title,\n            subtitle: layoutBlock.subtitle || \"\"\n          });\n        } else if (layoutBlock.title == \"flowNode\") {\n          layoutTreeNode.push({\n            type: \"flowNode\",\n            title: layoutBlock.title,\n            subtitle: layoutBlock.subtitle || \"\",\n            name: layoutBlock.subtitle || \"\"\n          });\n        } else if (layoutBlock.title == \"layout2columns\") {\n          layoutTreeNode.push({\n            type: \"layout2columns\",\n            title: layoutBlock.title,\n            layout: [\n              getLayoutNodeFromTree(level + 1, treeIndex, 0),\n              getLayoutNodeFromTree(level + 1, treeIndex, 1)\n            ]\n          });\n        } else {\n          layoutTreeNode.push({\n            type: \"layout\",\n            title: layoutBlock.title,\n            layout: getLayoutNodeFromTree(level + 1, treeIndex, 0)\n          });\n        }\n      });\n      return layoutTreeNode;\n    }\n    return [];\n  };\n  const screenUICallback = (command) => {\n    if (command && command.action == \"SendScreen\" && command.payload) {\n      const payload = command.payload;\n      if (payload.titleBarBackgroundcolor) {\n        setTitleBarBackgroundcolor(payload.titleBarBackgroundcolor);\n      }\n      if (payload.titleBarColor) {\n        setTitleBarColor(payload.titleBarColor);\n      }\n      if (payload.titleBarFont) {\n        setTitleBarFont(payload.titleBarFont);\n      }\n      if (payload.titleBarFontSize) {\n        setTitleBarFontSize(payload.titleBarFontSize);\n      }\n      if (payload.titleBarFontWeight) {\n        setTitleBarFontWeight(payload.titleBarFontWeight);\n      }\n      if (payload.titleBarFontWeight) {\n        setTitleBarFontWeight(payload.titleBarFontWeight);\n      }\n      if (payload.titleBarTitle) {\n        setTitleBarTitle(payload.titleBarTitle);\n      }\n    }\n  };\n  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {\n    props.flowrunnerConnector.registerScreenUICallback(screenUICallback);\n    props.flowrunnerConnector.unregisterNodeStateObserver(\"canvas\");\n    props.flowrunnerConnector.registerNodeStateObserver(\"canvas\", nodeStateObserver);\n    const paths = location.pathname.split(\"/\");\n    if (props.flowrunnerConnector.hasStorageProvider) {\n      loadFlow(\"flow\");\n    } else if (props.flowId !== void 0 && props.flowId !== \"\") {\n      loadFlow(props.flowId);\n    } else if (paths.length > 2) {\n      if (paths[1] == \"ui\") {\n        const flowId = paths[2];\n        if (flowId !== void 0) {\n          loadFlow(flowId);\n        } else {\n          console.error(\"No flowId specified\");\n        }\n      }\n    }\n    return () => {\n      unmounted.current = true;\n      props.flowrunnerConnector.unregisterNodeStateObserver(\"canvas\");\n    };\n  }, []);\n  const setupFlow = (flowPackage, flowId) => {\n    setTimeout(() => {\n      if (flowPackage.flowType === \"playground\") {\n        props.flowrunnerConnector.setFlowType(flowPackage.flowType || \"playground\");\n        canvasMode.setFlowrunnerPaused(false);\n        canvasMode.setFlowType(flowPackage.flowType || \"playground\");\n        flow.storeFlow(flowPackage.flow, flowId);\n        layout.storeLayout(JSON.stringify(flowPackage.layout));\n        let flowHash2 = {};\n        flowPackage.flow.map((node) => {\n          flowHash2[node.name] = node;\n          return true;\n        });\n        setFlowName(flowPackage.name);\n        setFlowHash(flowHash2);\n        setIsFlowLoaded(true);\n      }\n    }, 500);\n  };\n  const loadFlow = (flowId) => {\n    if (props.flowrunnerConnector.hasStorageProvider) {\n      const flowPackage = props.flowrunnerConnector.storageProvider?.getFlow(flowId);\n      setupFlow(flowPackage, flowId);\n      return;\n    }\n    cross_fetch__WEBPACK_IMPORTED_MODULE_4___default()(\"/flowui?flow=\" + flowId).then((res) => {\n      if (res.status >= 400) {\n        throw new Error(\"Bad response from server\");\n      }\n      return res.json();\n    }).then((flowPackage) => {\n      setupFlow(flowPackage, flowId);\n    }).catch((err) => {\n      console.error(err);\n    });\n  };\n  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {\n    layoutTreeAsString.current = JSON.parse(layout.layout) || {};\n    setLayoutTree(getLayoutNodeFromTree(1, 0, 0));\n    updateTouchedNodes();\n  }, [layout, flow]);\n  const updateTouchedNodes = () => {\n    if (touchedNodesLocal.current) {\n      Object.keys(touchedNodesLocal.current).map((touchNodeId) => {\n        const element = document.getElementById(touchNodeId);\n        if (element) {\n          if (touchedNodesLocal.current[touchNodeId] === true) {\n            element.classList.remove(\"untouched\");\n          } else {\n            element.classList.add(\"untouched\");\n          }\n        }\n      });\n    }\n  };\n  const nodeStateObserver = (nodeName, nodeState, touchedNodes) => {\n    nodesStateLocal.current[nodeName] = nodeState;\n    touchedNodesLocal.current = touchedNodes;\n    updateTouchedNodes();\n  };\n  if (!isFlowLoaded) {\n    return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(react__WEBPACK_IMPORTED_MODULE_0__.Fragment, null);\n  }\n  let title = flowName || \"UserInterface View\";\n  if (titleBarTitle !== \"\") {\n    title = titleBarTitle;\n  }\n  let style = {};\n  let navContainerClassName = \"mb-4\";\n  let navbarClassName = \"navbar navbar-expand-lg navbar-light\";\n  let h1ClassName = \"text-black\";\n  if (titleBarBackgroundcolor) {\n    style.backgroundColor = titleBarBackgroundcolor;\n    navContainerClassName = \"mb-4\";\n    navbarClassName = \"navbar navbar-expand-lg navbar-light\";\n  }\n  if (titleBarColor) {\n    style.color = titleBarColor;\n    h1ClassName = \"\";\n  }\n  if (titleBarFont) {\n    style.fontFamily = titleBarFont;\n  }\n  if (titleBarFontSize) {\n    style.fontSize = titleBarFontSize;\n  }\n  if (titleBarFontWeight) {\n    style.fontWeight = titleBarFontWeight;\n  }\n  return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"div\", {\n    className: \"pb-4 container__background\"\n  }, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"div\", {\n    style,\n    className: navContainerClassName\n  }, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"nav\", {\n    style,\n    className: navbarClassName\n  }, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"h1\", {\n    className: h1ClassName\n  }, title))), /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"div\", {\n    className: \"container container__ui-view\"\n  }, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(_devhelpr_layoutrunner__WEBPACK_IMPORTED_MODULE_1__.Layout, {\n    nodeName: \"ui\",\n    renderLayoutType: _components_layout_renderer__WEBPACK_IMPORTED_MODULE_2__.renderLayoutType,\n    payload: {\n      layout: layoutTree,\n      context: {\n        flowHash,\n        flow: flow.flow,\n        getNodeInstance: props.getNodeInstance,\n        flowrunnerConnector: props.flowrunnerConnector,\n        renderHtmlNode: props.renderHtmlNode\n      }\n    }\n  })), /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(_flow__WEBPACK_IMPORTED_MODULE_3__.Flow, {\n    flow: flow.flow,\n    flowId: flow.flowId,\n    flowrunnerConnector: props.flowrunnerConnector\n  }));\n};\n\n\n//# sourceURL=webpack://@devhelpr/flowrunner-canvas/./src/components/userinterface-view/multi-form-view.tsx?");

/***/ })

}]);