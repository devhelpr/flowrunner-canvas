/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["flowcanvaswebpackJsonpPlugin"] = self["flowcanvaswebpackJsonpPlugin"] || []).push([["src_components_userinterface-view-editor_index_tsx"],{

/***/ "./src/components/userinterface-view-editor/components/layout-with-droparea.tsx":
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"LayoutWithDropArea\": () => (/* binding */ LayoutWithDropArea)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(\"../../node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _userinterface_view_components_layout_renderer__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(\"./src/components/userinterface-view/components/layout-renderer.tsx\");\n\n\nclass LayoutWithDropArea extends react__WEBPACK_IMPORTED_MODULE_0__.Component {\n  constructor(props) {\n    super(props);\n    this.dropZone = void 0;\n    this.onAllowDrop = (event) => {\n      event.preventDefault();\n      if (this.dropZone && this.dropZone.current) {\n        this.dropZone.current.classList.add(\"hovering\");\n      }\n    };\n    this.onDragLeave = (event) => {\n      if (this.dropZone && this.dropZone.current) {\n        this.dropZone.current.classList.remove(\"hovering\");\n      }\n    };\n    this.onDropTask = (event) => {\n      event.preventDefault();\n      if (this.dropZone && this.dropZone.current) {\n        this.dropZone.current.classList.remove(\"hovering\");\n      }\n      try {\n        let draggable = JSON.parse(event.dataTransfer.getData(\"data-draggable\"));\n        if (!!draggable.isElement) {\n          return;\n        }\n        if (!!draggable.isElement && draggable.layout === this.props.name) {\n          return false;\n        }\n        console.log(\"draggable\", draggable);\n        this.setState((state) => {\n          let layout = [...state.layout];\n          layout.push({\n            title: draggable.title,\n            subtitle: draggable.subtitle || \"\",\n            name: this.props.name + \"-\" + this.props.level + \"-\" + (layout.length + 1) + draggable.title.replace(/\\s/g, \"\")\n          });\n          return {\n            layout\n          };\n        }, () => {\n          this.props.onStoreLayout(this.props.level, this.props.layoutIndex, this.props.layoutIndexLevel || 0, this.state.layout);\n        });\n      } catch (err) {\n      }\n      return true;\n    };\n    this.onDragStartOther = (event) => {\n      console.log(\"onDragStartOther\", event.target.getAttribute(\"data-layout-parent\"));\n      event.dataTransfer.setData(\"data-draggable\", JSON.stringify({\n        layout: event.target.getAttribute(\"data-layout-parent\"),\n        isElement: true,\n        id: event.target.id\n      }));\n    };\n    this.onAllowDropOther = (event) => {\n      event.preventDefault();\n      const id = event.target.id;\n      const domElement = document.getElementById(id);\n      if (domElement) {\n        domElement.classList.add(\"hovering\");\n      }\n    };\n    this.onDropTaskOther = (event) => {\n      event.preventDefault();\n      const id = event.target.id;\n      const domElement = document.getElementById(id);\n      if (domElement) {\n        domElement.classList.remove(\"hovering\");\n        try {\n          let draggable = JSON.parse(event.dataTransfer.getData(\"data-draggable\"));\n          if (!!draggable.isElement && draggable.layout === this.props.name && draggable.id !== id) {\n            return false;\n          }\n        } catch (err) {\n        }\n      }\n    };\n    this.onDragLeaveOther = (event) => {\n      const id = event.target.id;\n      const domElement = document.getElementById(id);\n      if (domElement) {\n        domElement.classList.remove(\"hovering\");\n      }\n    };\n    this.dropZone = react__WEBPACK_IMPORTED_MODULE_0__.createRef();\n    let layout = [];\n    let initialLayout = props.onGetLayout(props.level, props.layoutIndex, props.layoutIndexLevel || 0);\n    if (initialLayout !== false) {\n      layout = initialLayout;\n    }\n    this.state = {\n      layout\n    };\n  }\n  componentDidUpdate(prevProps) {\n    if (this.props.tree !== void 0 && this.props.tree !== null && prevProps.tree !== this.props.tree) {\n      let layout = [];\n      let initialLayout = this.props.onGetLayout(this.props.level, this.props.layoutIndex, this.props.layoutIndexLevel || 0);\n      if (initialLayout !== false) {\n        layout = initialLayout;\n      }\n      this.setState({\n        layout\n      });\n    }\n  }\n  render() {\n    const {level, name} = this.props;\n    return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(react__WEBPACK_IMPORTED_MODULE_0__.Fragment, null, this.state.layout.map((layout, index) => {\n      if (layout.title == \"element\") {\n        return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(react__WEBPACK_IMPORTED_MODULE_0__.Fragment, {\n          key: index\n        }, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"div\", {\n          draggable: true,\n          \"data-layout-parent\": this.props.name,\n          id: this.props.name + \"-element\" + index,\n          onDragOver: this.onAllowDropOther,\n          onDragStart: this.onDragStartOther,\n          onDrop: this.onDropTaskOther,\n          onDragLeave: this.onDragLeaveOther,\n          className: \"draggable-element font-weight-bold\"\n        }, layout.title));\n      }\n      if (layout.title == \"flowNode\") {\n        const flowNode = this.props.flowHash[layout.subtitle];\n        if (flowNode === void 0) {\n          return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(react__WEBPACK_IMPORTED_MODULE_0__.Fragment, {\n            key: index\n          });\n        }\n        return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(react__WEBPACK_IMPORTED_MODULE_0__.Fragment, {\n          key: index\n        }, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"div\", {\n          draggable: true,\n          onDragOver: this.onAllowDropOther,\n          onDragStart: this.onDragStartOther,\n          onDrop: this.onDropTaskOther,\n          onDragLeave: this.onDragLeaveOther,\n          \"data-layout-parent\": this.props.name,\n          className: \"draggable-element ui-view-layout__container\",\n          id: this.props.name + \"-flownode\" + index\n        }, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"div\", {\n          className: \"font-weight-bold\"\n        }, layout.title), /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"div\", {\n          className: \"text-secondary\"\n        }, layout.subtitle), (0,_userinterface_view_components_layout_renderer__WEBPACK_IMPORTED_MODULE_1__.renderFlowNode)(flowNode, {\n          context: {\n            getNodeInstance: this.props.getNodeInstance,\n            flowrunnerConnector: this.props.flowrunnerConnector,\n            flow: this.props.flow,\n            renderHtmlNode: this.props.renderHtmlNode\n          }\n        }, true)));\n      }\n      if (layout.title == \"layout2columns\") {\n        return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(react__WEBPACK_IMPORTED_MODULE_0__.Fragment, {\n          key: index\n        }, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"div\", {\n          className: \"layout-container layout-container__layout2columns\"\n        }, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"div\", {\n          className: \"font-weight-bold\"\n        }, layout.title), /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"div\", {\n          className: \"row\"\n        }, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"div\", {\n          className: \"col-6 layout-container__layout2columns-col-1\"\n        }, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(LayoutWithDropArea, {\n          onGetLayout: this.props.onGetLayout,\n          onStoreLayout: this.props.onStoreLayout,\n          layoutIndex: index,\n          name: layout.name + \"c0-\" + index + \"c\",\n          level: level + 1,\n          getNodeInstance: this.props.getNodeInstance,\n          flowrunnerConnector: this.props.flowrunnerConnector,\n          flow: this.props.flow,\n          renderHtmlNode: this.props.renderHtmlNode,\n          flowHash: this.props.flowHash\n        })), /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"div\", {\n          className: \"col-6 layout-container__layout2columns-col-2\"\n        }, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(LayoutWithDropArea, {\n          onGetLayout: this.props.onGetLayout,\n          onStoreLayout: this.props.onStoreLayout,\n          layoutIndex: index,\n          layoutIndexLevel: 1,\n          name: layout.name + \"c1-\" + index + \"c\",\n          level: level + 1,\n          getNodeInstance: this.props.getNodeInstance,\n          flowrunnerConnector: this.props.flowrunnerConnector,\n          flow: this.props.flow,\n          renderHtmlNode: this.props.renderHtmlNode,\n          flowHash: this.props.flowHash\n        })))));\n      }\n      return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(react__WEBPACK_IMPORTED_MODULE_0__.Fragment, {\n        key: index\n      }, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(react__WEBPACK_IMPORTED_MODULE_0__.Fragment, null, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"div\", {\n        className: \"layout-container\"\n      }, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"div\", {\n        className: \"font-weight-bold\"\n      }, layout.title), /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(LayoutWithDropArea, {\n        onGetLayout: this.props.onGetLayout,\n        onStoreLayout: this.props.onStoreLayout,\n        layoutIndex: index,\n        name: layout.name + \"l\" + index + \"l\",\n        level: level + 1,\n        getNodeInstance: this.props.getNodeInstance,\n        flowrunnerConnector: this.props.flowrunnerConnector,\n        flow: this.props.flow,\n        renderHtmlNode: this.props.renderHtmlNode,\n        flowHash: this.props.flowHash\n      }))));\n    }), /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"div\", {\n      ref: this.dropZone,\n      className: \"layout__droparea\",\n      onDragOver: this.onAllowDrop,\n      onDrop: this.onDropTask,\n      onDragLeave: this.onDragLeave\n    }));\n  }\n}\n\n\n//# sourceURL=webpack://@devhelpr/flowrunner-canvas/./src/components/userinterface-view-editor/components/layout-with-droparea.tsx?");

/***/ }),

/***/ "./src/components/userinterface-view-editor/index.tsx":
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"UserInterfaceViewEditor\": () => (/* binding */ UserInterfaceViewEditor)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(\"../../node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _components_layout_with_droparea__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(\"./src/components/userinterface-view-editor/components/layout-with-droparea.tsx\");\n/* harmony import */ var _helpers_flow_to_canvas__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(\"./src/helpers/flow-to-canvas.ts\");\n/* harmony import */ var _helpers_shape_settings__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(\"./src/helpers/shape-settings.ts\");\n/* harmony import */ var _userinterface_view_components_layout_renderer__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(\"./src/components/userinterface-view/components/layout-renderer.tsx\");\n/* harmony import */ var _flow__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(\"./src/components/flow/index.tsx\");\n/* harmony import */ var _state_flow_state__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(\"./src/state/flow-state.ts\");\n/* harmony import */ var _state_layout_state__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(\"./src/state/layout-state.ts\");\n/* harmony import */ var _state_canvas_mode_state__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(\"./src/state/canvas-mode-state.ts\");\n\n\n\n\n\n\n\n\n\n\nconst UserInterfaceViewEditor = (props) => {\n  const [tree, setTree] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)({});\n  const [renderIndex, setRenderIndex] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(1);\n  const [flowHash, setFlowHash] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)({});\n  const [nodesOnLayout, setNodesOnLayout] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)({});\n  const flow = (0,_state_flow_state__WEBPACK_IMPORTED_MODULE_6__.useFlowStore)();\n  const canvasMode = (0,_state_canvas_mode_state__WEBPACK_IMPORTED_MODULE_8__.useCanvasModeStateStore)();\n  const layout = (0,_state_layout_state__WEBPACK_IMPORTED_MODULE_7__.useLayoutStore)();\n  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {\n    let newFlowHash = {};\n    flow.flow.map((node) => {\n      newFlowHash[node.name] = node;\n      return true;\n    });\n    let initTree = JSON.parse(layout.layout) || {};\n    setTree(initTree);\n    setFlowHash(newFlowHash);\n    setNodesOnLayout(getFlowNodeFromTree(initTree, 1, 0, 0));\n  }, []);\n  const getFlowNodeFromTree = (layoutTree, level, index, subIndex) => {\n    let treeHashKey = level + \".\" + index + \".\" + subIndex;\n    if (layoutTree[treeHashKey]) {\n      let tree2 = layoutTree[treeHashKey];\n      let flowNodes = {};\n      tree2.map((layoutBlock, treeIndex) => {\n        if (layoutBlock.title == \"flowNode\") {\n          flowNodes[layoutBlock.subtitle] = true;\n        } else if (layoutBlock.title == \"layout2columns\") {\n          flowNodes = {...flowNodes, ...getFlowNodeFromTree(layoutTree, level + 1, treeIndex, 0)};\n          flowNodes = {...flowNodes, ...getFlowNodeFromTree(layoutTree, level + 1, treeIndex, 1)};\n        } else {\n          flowNodes = {...flowNodes, ...getFlowNodeFromTree(layoutTree, level + 1, treeIndex, 0)};\n        }\n      });\n      return flowNodes;\n    }\n    return {};\n  };\n  const onStoreLayout = (level, index, subIndex, layout2) => {\n    let updatedTree = {...tree};\n    let treeHashKey = level + \".\" + index + \".\" + subIndex;\n    updatedTree[treeHashKey] = layout2;\n    setRenderIndex(renderIndex + 1);\n    setTree(updatedTree);\n    setNodesOnLayout(getFlowNodeFromTree(updatedTree, 1, 0, 0));\n  };\n  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {\n    layout.storeLayout(JSON.stringify(tree));\n  }, [tree]);\n  const onGetLayout = (level, index, subIndex) => {\n    let treeHashKey = level + \".\" + index + \".\" + subIndex;\n    if (tree[treeHashKey]) {\n      return tree[treeHashKey];\n    }\n    return false;\n  };\n  const onDragStart = (event) => {\n    event.dataTransfer.setData(\"data-draggable\", JSON.stringify({\n      title: event.target.getAttribute(\"data-draggable\"),\n      subtitle: event.target.getAttribute(\"data-id\") || \"\"\n    }));\n  };\n  const clearLayout = (event) => {\n    event.preventDefault();\n    setTree({});\n    setRenderIndex(renderIndex + 1);\n    setNodesOnLayout({});\n    return false;\n  };\n  return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(react__WEBPACK_IMPORTED_MODULE_0__.Fragment, null, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"div\", {\n    className: \"container-fluid\"\n  }, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"h1\", null, \"UIVIEW EDITOR\"), /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"div\", {\n    className: \"row ui-editor__row\"\n  }, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"div\", {\n    className: \"col-10 layout__dropzone\"\n  }, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"div\", {\n    className: \"layout__dropzone-inner\",\n    \"data-renderindex\": renderIndex\n  }, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(_components_layout_with_droparea__WEBPACK_IMPORTED_MODULE_1__.LayoutWithDropArea, {\n    onGetLayout,\n    onStoreLayout,\n    layoutIndex: 0,\n    name: \"l\",\n    level: 1,\n    tree,\n    getNodeInstance: props.getNodeInstance,\n    flowrunnerConnector: props.flowrunnerConnector,\n    flow: flow.flow,\n    renderHtmlNode: props.renderHtmlNode,\n    flowHash\n  }))), /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"div\", {\n    className: \"col-2 layout__draggables\"\n  }, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"div\", null, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"button\", {\n    type: \"button\",\n    onClick: clearLayout,\n    className: \"btn btn-danger\"\n  }, \"Clear layout\")), /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"div\", {\n    onDragStart,\n    \"data-draggable\": \"layout\",\n    draggable: true,\n    className: \"layout__draggable\"\n  }, \"Layout\"), /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"div\", {\n    onDragStart,\n    \"data-draggable\": \"layout2columns\",\n    draggable: true,\n    className: \"layout__draggable\"\n  }, \"Layout 2columns\"), /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"div\", {\n    onDragStart,\n    \"data-draggable\": \"element\",\n    draggable: true,\n    className: \"layout__draggable\"\n  }, \"Element\"), flow.flow.filter((node, index) => {\n    if (!!node.hideFromUI || nodesOnLayout[node.name]) {\n      return false;\n    }\n    let shapeType = _helpers_flow_to_canvas__WEBPACK_IMPORTED_MODULE_2__.FlowToCanvas.getShapeType(node.shapeType, node.taskType, node.isStartEnd);\n    const settings = _helpers_shape_settings__WEBPACK_IMPORTED_MODULE_3__.ShapeSettings.getShapeSettings(node.taskType, node);\n    if (shapeType === \"Html\" && !!settings.hasUI) {\n      return true;\n    }\n    return false;\n  }).map((flowNode, index) => {\n    return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"div\", {\n      key: \"flowNode-\" + index,\n      onDragStart,\n      \"data-draggable\": \"flowNode\",\n      \"data-id\": flowNode.name,\n      draggable: true,\n      className: \"layout__draggable\"\n    }, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"label\", null, flowNode.name), (0,_userinterface_view_components_layout_renderer__WEBPACK_IMPORTED_MODULE_4__.renderFlowNode)(flowNode, {\n      context: {\n        getNodeInstance: props.getNodeInstance,\n        flowrunnerConnector: props.flowrunnerConnector,\n        flow: flow.flow,\n        renderHtmlNode: props.renderHtmlNode\n      }\n    }, false));\n  })))), /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(_flow__WEBPACK_IMPORTED_MODULE_5__.Flow, {\n    flow: flow.flow,\n    flowrunnerConnector: props.flowrunnerConnector,\n    flowId: flow.flowId\n  }));\n};\n\n\n//# sourceURL=webpack://@devhelpr/flowrunner-canvas/./src/components/userinterface-view-editor/index.tsx?");

/***/ })

}]);