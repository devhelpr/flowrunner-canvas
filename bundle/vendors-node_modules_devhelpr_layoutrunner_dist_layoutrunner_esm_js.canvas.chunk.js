/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["flowcanvaswebpackJsonpPlugin"] = self["flowcanvaswebpackJsonpPlugin"] || []).push([["vendors-node_modules_devhelpr_layoutrunner_dist_layoutrunner_esm_js"],{

/***/ "./node_modules/@devhelpr/layoutrunner/dist/layoutrunner.esm.js":
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"Elements\": () => (/* binding */ Elements),\n/* harmony export */   \"Form\": () => (/* binding */ Form),\n/* harmony export */   \"FormComponent\": () => (/* binding */ FormComponent),\n/* harmony export */   \"Layout\": () => (/* binding */ Layout)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(\"./node_modules/react/index.js\");\n\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  subClass.__proto__ = superClass;\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\n/*\r\nconst mapStateToProps = (state : any, ownProps : any) => {\r\n    let mappedState : any = {};\r\n    //console.log(\"ownProps\", ownProps);\r\n    if (ownProps.payload && ownProps.payload.navigationActions) {\r\n        //console.log(\"ownProps.payload.navigationActions\", ownProps.payload.navigationActions);\r\n        ownProps.payload.navigationActions.map((navigationAction : any) => {\r\n            if (navigationAction.getVariable) {\r\n                mappedState[\"_\" + navigationAction.getVariable] = state[navigationAction.getVariable];\r\n            }\r\n\n            if (navigationAction.visibleByVariable) {\r\n                mappedState[\"_\" + navigationAction.visibleByVariable] = state[navigationAction.visibleByVariable];\r\n            }\r\n\n            if (navigationAction.enabledByVariable) {\r\n                mappedState[\"_\" + navigationAction.enabledByVariable] = state[navigationAction.enabledByVariable];\r\n            }\r\n        })\r\n    }\r\n    return mappedState;\r\n}\r\n*/\n\n/*\r\nconst mapDispatchToProps = (dispatch: any) => {\r\n    return {\r\n    }\r\n}\r\n*/\n// https://medium.com/@jrwebdev/react-higher-order-component-patterns-in-typescript-42278f7590fb\n\nvar InternalLayoutComponent = /*#__PURE__*/function (_React$Component) {\n  _inheritsLoose(InternalLayoutComponent, _React$Component);\n\n  function InternalLayoutComponent() {\n    var _this;\n\n    _this = _React$Component.apply(this, arguments) || this;\n    _this.isAppMounted = false;\n    _this.state = {\n      layoutVisibleState: []\n    };\n\n    _this.setLayoutVisibleState = function (layoutBlockName, isVisible) {\n      // TODO :\n      //  - add promise\n      //  - remove renderTrigger ??\n      if (Array.isArray(layoutBlockName)) {\n        var layoutVisibleState = {};\n        layoutBlockName.map(function (layoutBlock) {\n          var orgIsVisible = true;\n          var isVisible = !!layoutBlock.isVisible;\n\n          if (_this.state.layoutVisibleState[layoutBlock.name] !== undefined) {\n            orgIsVisible = !!_this.state.layoutVisibleState[layoutBlock.name];\n          }\n\n          if (isVisible !== orgIsVisible) {\n            layoutVisibleState[layoutBlock.name] = !!isVisible;\n          }\n\n          return true;\n        });\n\n        _this.setState({\n          layoutVisibleState: _extends({}, _this.state.layoutVisibleState, layoutVisibleState)\n        }, function () {\n          console.log('LayoutVisibleState after setstate', _this.state.layoutVisibleState);\n        });\n      } else {\n        var orgIsVisible = true;\n\n        if (_this.state.layoutVisibleState[layoutBlockName] !== undefined) {\n          orgIsVisible = !!_this.state.layoutVisibleState[layoutBlockName];\n        }\n\n        console.log(layoutBlockName, isVisible, orgIsVisible, _this.state.layoutVisibleState[layoutBlockName], _this.state.layoutVisibleState);\n\n        if (isVisible !== orgIsVisible) {\n          var _extends2;\n\n          console.log('layoutBlockName', layoutBlockName, isVisible);\n\n          _this.setState({\n            layoutVisibleState: _extends({}, _this.state.layoutVisibleState, (_extends2 = {}, _extends2[layoutBlockName] = !!isVisible, _extends2))\n          }, function () {\n            console.log('LayoutVisibleState after setstate', _this.state.layoutVisibleState);\n          });\n        }\n      }\n    };\n\n    _this.localStore = {};\n\n    _this.getValueFromLocalStore = function (key) {\n      return _this.localStore[key];\n    };\n\n    _this.setValueFromLocalStore = function (key, value) {\n      _this.localStore[key] = value;\n    };\n\n    return _this;\n  }\n\n  var _proto = InternalLayoutComponent.prototype;\n\n  _proto.render = function render() {\n    var _this2 = this;\n\n    if (!this.props.payload || !this.props.payload.layout) {\n      return react__WEBPACK_IMPORTED_MODULE_0__.createElement(react__WEBPACK_IMPORTED_MODULE_0__.Fragment, null);\n    }\n\n    if (!this.isAppMounted && !!this.props.isAppShell && this.props.onAppMount) {\n      this.isAppMounted = true;\n      this.props.onAppMount(this.props.payload);\n    }\n\n    var layout = this.props.payload.layout;\n    var navigationActionVariables = {};\n\n    if (this.props.payload && this.props.payload.navigationActions) {\n      this.props.payload.navigationActions.map(function (navigationAction) {\n        if (navigationAction.getVariable) {\n          navigationActionVariables[navigationAction.getVariable] = _this2.props['_' + navigationAction.getVariable];\n        }\n\n        if (navigationAction.visibleByVariable) {\n          navigationActionVariables[navigationAction.visibleByVariable] = _this2.props['_' + navigationAction.visibleByVariable];\n        }\n\n        if (navigationAction.enabledByVariable) {\n          navigationActionVariables[navigationAction.enabledByVariable] = _this2.props['_' + navigationAction.enabledByVariable];\n        }\n\n        return true;\n      });\n    }\n\n    var styles = {};\n\n    if (this.props.payload && this.props.onGetStylesFromPayload) {\n      styles = this.props.onGetStylesFromPayload(this.props.payload);\n    } // key={uuidV4()}\n\n\n    return react__WEBPACK_IMPORTED_MODULE_0__.createElement(react__WEBPACK_IMPORTED_MODULE_0__.Fragment, null, this.props.renderNavigation && this.props.renderNavigation(this.props.payload.navigation, this.props.payload.navigationActions || [], navigationActionVariables), layout.map(function (layoutBlock, index) {\n      if (_this2.props.filterLayout && !_this2.props.filterLayout(layoutBlock)) {\n        return react__WEBPACK_IMPORTED_MODULE_0__.createElement(react__WEBPACK_IMPORTED_MODULE_0__.Fragment, {\n          key: 'layoutblock-' + index\n        });\n      }\n      /*\r\n                    todo:\r\n                        - passthrough setLayoutVisibleState method\r\n                        - if layoutBlock has a name and this exists in state.layoutVisibleState\r\n                            .. and this is false.. then HIDE the layoutBlock\r\n                            .. otherwise : show the layoutBlock\r\n                        \n                        - howto handle initialstate?\r\n                            - optional property visible\r\n                       */\n\n\n      if (layoutBlock.name && _this2.state.layoutVisibleState[layoutBlock.name] !== undefined && _this2.state.layoutVisibleState[layoutBlock.name] === false) {\n        return react__WEBPACK_IMPORTED_MODULE_0__.createElement(react__WEBPACK_IMPORTED_MODULE_0__.Fragment, {\n          key: 'layoutblock-' + index\n        });\n      }\n\n      return react__WEBPACK_IMPORTED_MODULE_0__.createElement(react__WEBPACK_IMPORTED_MODULE_0__.Fragment, {\n        key: 'layoutblock-' + index\n      }, _this2.props.renderLayoutType(layoutBlock, false, undefined, _this2.setLayoutVisibleState, _this2.props.rootLayout ? _this2.props.rootLayout : {\n        name: _this2.props.nodeName,\n        layout: layout,\n        context: _this2.props.payload.context || {},\n        styles: styles,\n        getValueFromLocalStore: _this2.getValueFromLocalStore,\n        setValueFromLocalStore: _this2.setValueFromLocalStore\n      }));\n    }));\n  };\n\n  return InternalLayoutComponent;\n}(react__WEBPACK_IMPORTED_MODULE_0__.Component); //export const Layout = ReactComponentFlowConnector(connect(mapStateToProps, mapDispatchToProps)(InternalLayoutComponent));\n//export const Layout = connect(mapStateToProps)(InternalLayoutComponent);\n\n\nvar Layout = InternalLayoutComponent;\n\n/*\r\nconst mapStateToProps = (state : any, ownProps : any) => {\r\n    let mappedState : any = {};\r\n    if (ownProps.elements) {\r\n        ownProps.elements.map((element : any) => {\r\n            if (element.getVariable) {\r\n                mappedState[\"_\" + element.getVariable] = state[element.getVariable];\r\n            }\r\n        });\r\n    }\r\n    return mappedState;\r\n}\r\n*/\n\nvar InternalElements = /*#__PURE__*/function (_React$Component) {\n  _inheritsLoose(InternalElements, _React$Component);\n\n  function InternalElements() {\n    var _this;\n\n    _this = _React$Component.apply(this, arguments) || this;\n    _this.state = {};\n\n    _this.getFlowValue = function (fieldName) {\n      var value = _this.props['_' + fieldName];\n\n      if (value === undefined) {\n        return '';\n      }\n\n      return value;\n    };\n\n    return _this;\n  }\n\n  var _proto = InternalElements.prototype;\n\n  _proto.componentDidMount = function componentDidMount() {};\n\n  _proto.render = function render() {\n    var _this2 = this;\n\n    var ElementHeader = this.props.elementHeader;\n    var ElementBody = this.props.elementBody;\n    return react__WEBPACK_IMPORTED_MODULE_0__.createElement(react__WEBPACK_IMPORTED_MODULE_0__.Fragment, null, react__WEBPACK_IMPORTED_MODULE_0__.createElement(ElementHeader, {\n      caption: this.props.caption\n    }), react__WEBPACK_IMPORTED_MODULE_0__.createElement(ElementBody, null, this.props.elements && this.props.elements.map(function (element, index) {\n      var control = _this2.props.renderElementType(element, _this2.getFlowValue, _this2.props.rootLayout);\n\n      return react__WEBPACK_IMPORTED_MODULE_0__.createElement(react__WEBPACK_IMPORTED_MODULE_0__.Fragment, {\n        key: index\n      }, control);\n    })));\n  };\n\n  return InternalElements;\n}(react__WEBPACK_IMPORTED_MODULE_0__.Component); //export const Elements = connect(mapStateToProps)(InternalElements);\n\nvar Elements = InternalElements;\n\n/*\r\nconst mapStateToProps = (state : any, ownProps : any) => {\r\n    let mappedState : any = {};\r\n    if (ownProps.formDefinition) {\r\n        ownProps.formDefinition.map((formField : any) => {\r\n            if (formField.getVariable) {\r\n                if (!mappedState[\"_\" + formField.getVariable]) {\r\n                    mappedState[\"_\" + formField.getVariable] = state[formField.getVariable];\r\n                }\r\n            }\r\n            if (formField.getVariables) {\r\n                formField.getVariables.map((getVariable : any) => {\r\n                    if (!mappedState[\"_\" + getVariable]) {\r\n                        mappedState[\"_\" + getVariable] = state[getVariable];\r\n                    }\r\n                })\r\n            }\r\n        });\r\n    }\r\n    return mappedState;\r\n}\r\n\n*/\n\nvar FormComponent = /*#__PURE__*/function (_React$Component) {\n  _inheritsLoose(FormComponent, _React$Component);\n\n  function FormComponent() {\n    var _this;\n\n    _this = _React$Component.apply(this, arguments) || this;\n    _this.state = {\n      isInitialised: false\n    };\n\n    _this.getFormFieldValue = function (fieldName) {\n      var component = _this.props.parentForm ? _this.props.parentForm : _assertThisInitialized(_this);\n      return component.state[fieldName] || '';\n    };\n\n    _this.setFormFieldValue = function (fieldName, value) {\n      var component = _this.props.parentForm ? _this.props.parentForm : _assertThisInitialized(_this);\n      return new Promise(function (resolve) {\n        var _component$setState;\n\n        component.setState((_component$setState = {}, _component$setState[fieldName] = value, _component$setState), function () {\n          resolve();\n        });\n      });\n    };\n\n    _this.getFormValues = function () {\n      var component = _this.props.parentForm ? _this.props.parentForm : _assertThisInitialized(_this);\n      return component.state;\n    };\n\n    _this.getFlowValue = function (fieldName) {\n      var value = _this.props['_' + fieldName];\n\n      if (value === undefined) {\n        return '';\n      }\n\n      return value;\n    }; // todo : rename naar executeNode of iets dergelijks\n\n\n    _this.setFlowValue = function (nodeName, value) {\n      console.log(nodeName, value); //return getFlowEventRunner().executeNode(nodeName, {value : value, ...config});\n\n      return false;\n    };\n\n    return _this;\n  }\n\n  var _proto = FormComponent.prototype;\n\n  _proto.getAdditionalStateFields = function getAdditionalStateFields(layoutBlock) {\n    var _this2 = this;\n\n    var result = [];\n\n    if (layoutBlock.form) {\n      layoutBlock.form.map(function (formField) {\n        if (formField.layout) {\n          if (formField.type === 'layout') {\n            result = result.concat(_this2.getAdditionalStateFields(formField.layout));\n          } else {\n            formField.layout.map(function (layoutBlock) {\n              result = result.concat(_this2.getAdditionalStateFields(layoutBlock));\n              return true;\n            });\n          }\n        } else {\n          if (formField.fieldName) {\n            result.push(formField.fieldName);\n          }\n        }\n\n        return true;\n      });\n    } else if (layoutBlock.layout) {\n      if (layoutBlock.type === 'layout') {\n        result = result.concat(this.getAdditionalStateFields(layoutBlock.layout));\n      } else {\n        layoutBlock.layout.map(function (layoutBlock) {\n          result = result.concat(_this2.getAdditionalStateFields(layoutBlock));\n          return true;\n        });\n      }\n    }\n\n    return result;\n  };\n\n  _proto.componentDidMount = function componentDidMount() {\n    var _this3 = this;\n\n    if (!this.props.hasParentForm) {\n      var initialState = {};\n\n      if (this.props.formDefinition) {\n        this.props.formDefinition.map(function (formField) {\n          if (formField.fieldName) {\n            initialState[formField.fieldName] = '';\n          }\n\n          return true;\n        });\n        var formFieldNames = this.getAdditionalStateFields(this.props.layoutBlock);\n        formFieldNames.map(function (formFieldName) {\n          if (formFieldName) {\n            initialState[formFieldName] = '';\n          }\n\n          return true;\n        });\n      }\n\n      var component = this.props.parentForm ? this.props.parentForm : this;\n      component.setState(_extends({}, initialState), function () {\n        if (_this3.props.datasourceNode) ; else {\n          _this3.setState({\n            isInitialised: true\n          });\n        }\n      });\n    } else {\n      this.setState({\n        isInitialised: true\n      });\n    }\n  };\n\n  _proto.render = function render() {\n    var _this4 = this;\n\n    if (!this.state.isInitialised) {\n      return react__WEBPACK_IMPORTED_MODULE_0__.createElement(react__WEBPACK_IMPORTED_MODULE_0__.Fragment, null);\n    }\n\n    var FormHeader = this.props.formHeader;\n    var FormBody = this.props.formBody;\n    return react__WEBPACK_IMPORTED_MODULE_0__.createElement(react__WEBPACK_IMPORTED_MODULE_0__.Fragment, null, react__WEBPACK_IMPORTED_MODULE_0__.createElement(FormHeader, {\n      hasParentForm: this.props.hasParentForm,\n      caption: this.props.caption\n    }), react__WEBPACK_IMPORTED_MODULE_0__.createElement(FormBody, Object.assign({}, this.state, {\n      hasParentForm: this.props.hasParentForm\n    }), this.props.formDefinition && this.props.formDefinition.map(function (formField, index) {\n\n      return react__WEBPACK_IMPORTED_MODULE_0__.createElement(react__WEBPACK_IMPORTED_MODULE_0__.Fragment, {\n        key: index\n      }, _this4.props.renderFormControl && _this4.props.renderFormControl(_this4.props.hasParentForm ? _this4.props.parentForm : _this4, formField, _this4.getFormFieldValue, _this4.setFormFieldValue, _this4.getFormValues, _this4.getFlowValue, _this4.setFlowValue, _this4.props.renderLayoutType, _this4.props.rootLayout, _this4.props.setLayoutVisibleState));\n    })));\n  };\n\n  return FormComponent;\n}(react__WEBPACK_IMPORTED_MODULE_0__.Component); //export const Form = connect(mapStateToProps)(FormComponent);\n\nvar Form = FormComponent;\n\n\n//# sourceMappingURL=layoutrunner.esm.js.map\n\n\n//# sourceURL=webpack://@devhelpr/flowrunner-canvas/./node_modules/@devhelpr/layoutrunner/dist/layoutrunner.esm.js?");

/***/ })

}]);