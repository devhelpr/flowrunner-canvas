{"c0cf8a2b-7ff0-4838-b3f6-e477a08bafe7":{"SmallGameOfLiveGridEditTask":[{"name":"spaceship1","preset":"1111-2222","data":"[{\"value\":1,\"x\":7,\"y\":5},{\"value\":1,\"x\":8,\"y\":6},{\"value\":1,\"x\":6,\"y\":7},{\"value\":1,\"x\":7,\"y\":7},{\"value\":1,\"x\":8,\"y\":7}]"},{"name":"spaceship2","preset":"1111-3333","data":"[{\"value\":1,\"x\":5,\"y\":5},{\"value\":1,\"x\":6,\"y\":5},{\"value\":1,\"x\":7,\"y\":5},{\"value\":1,\"x\":8,\"y\":5},{\"value\":1,\"x\":9,\"y\":5},{\"value\":1,\"x\":10,\"y\":5},{\"value\":1,\"x\":4,\"y\":6},{\"value\":1,\"x\":10,\"y\":6},{\"value\":1,\"x\":10,\"y\":7},{\"value\":1,\"x\":4,\"y\":8},{\"value\":1,\"x\":9,\"y\":8},{\"value\":1,\"x\":6,\"y\":9},{\"value\":1,\"x\":7,\"y\":9}]"},{"name":"spaceship3","preset":"1111-4444","data":"[{\"value\":1,\"x\":5,\"y\":5},{\"value\":1,\"x\":6,\"y\":5},{\"value\":1,\"x\":7,\"y\":5},{\"value\":1,\"x\":4,\"y\":6},{\"value\":1,\"x\":5,\"y\":6},{\"value\":1,\"x\":6,\"y\":6},{\"value\":1,\"x\":8,\"y\":11},{\"value\":1,\"x\":9,\"y\":11},{\"value\":1,\"x\":10,\"y\":11},{\"value\":1,\"x\":7,\"y\":12},{\"value\":1,\"x\":8,\"y\":12},{\"value\":1,\"x\":9,\"y\":12}]"}]},"f5a121a2-db3e-4a7a-9d79-3f20abc3b65a":{"GameOfLiveBigGridEditTask":[{"name":"set1","preset":"1111-2222-1","data":"[{\"value\":1,\"x\":7,\"y\":5},{\"value\":1,\"x\":8,\"y\":6},{\"value\":1,\"x\":6,\"y\":7},{\"value\":1,\"x\":7,\"y\":7},{\"value\":1,\"x\":8,\"y\":7},{\"value\":1,\"x\":8,\"y\":22},{\"value\":1,\"x\":9,\"y\":23},{\"value\":1,\"x\":7,\"y\":24},{\"value\":1,\"x\":8,\"y\":24},{\"value\":1,\"x\":9,\"y\":24}]"},{"name":"set2","preset":"1111-3333-2","data":"[{\"value\":1,\"x\":5,\"y\":5},{\"value\":1,\"x\":6,\"y\":5},{\"value\":1,\"x\":7,\"y\":5},{\"value\":1,\"x\":8,\"y\":5},{\"value\":1,\"x\":9,\"y\":5},{\"value\":1,\"x\":10,\"y\":5},{\"value\":1,\"x\":4,\"y\":6},{\"value\":1,\"x\":10,\"y\":6},{\"value\":1,\"x\":10,\"y\":7},{\"value\":1,\"x\":4,\"y\":8},{\"value\":1,\"x\":9,\"y\":8},{\"value\":1,\"x\":6,\"y\":9},{\"value\":1,\"x\":7,\"y\":9}]"},{"name":"set3","preset":"1111-4444-3","data":"[{\"value\":1,\"x\":5,\"y\":5},{\"value\":1,\"x\":6,\"y\":5},{\"value\":1,\"x\":7,\"y\":5},{\"value\":1,\"x\":4,\"y\":6},{\"value\":1,\"x\":5,\"y\":6},{\"value\":1,\"x\":6,\"y\":6},{\"value\":1,\"x\":8,\"y\":11},{\"value\":1,\"x\":9,\"y\":11},{\"value\":1,\"x\":10,\"y\":11},{\"value\":1,\"x\":7,\"y\":12},{\"value\":1,\"x\":8,\"y\":12},{\"value\":1,\"x\":9,\"y\":12}]"}]},"c462ad5b-2e0a-46f8-81c9-f70ed133b9f0":{"ScriptTask1":[{"data":"{\"outputProperty\":\"script\",\"rows\":10,\"script\":\"// TODO: implement \\\"foreachpixel\\\"\\ninput slider;\\ninput slider2;\\ninput colorfactor;\\ninput range;\\ninput colorfade;\\n\\nfunction_i32 mapvalue(min,max,valuerangemin, valuerangemax,value) {\\n   let_i32 maxmin = 0;\\n   maxmin = max-min;\\t \\n   let_i32 valuemaxmin = 0;\\n   valuemaxmin = valuerangemax- \\n   valuerangemin;\\n   let multiplier = 0;\\n   multiplier = (\\n      convert_signed_i32_to_f32(maxmin)\\n\\t)/(\\n\\t\\tconvert_signed_i32_to_f32(valuemaxmin)\\n\\t);\\n\\t/*\\n\\t\\t0..255 0..383\\n\\t*/\\n\\tlet result = 0;\\n         result = \\n          convert_signed_i32_to_f32(value) \\n          * multiplier;\\n\\treturn trunc_signed_f32_to_i32(result);\\n}\\n\\nfunction_i32 getaddress(xx,yy,maxwidth) {\\n  return_i32 yy*maxwidth*4+xx*4;\\n}\\nfunction distance(xx,yy,xa,ya) {\\n  return sqrt(\\n   (xx-xa)*(xx-xa) + \\n   (yy-ya)*(yy-ya)\\n  );\\n}\\nfunction_i32 \\n  setpixel(address,value,valuex,valuey) {\\n    store(address,value,valuex,valuey);\\n    return_i32 0;\\n}\\n\\nfunction_i32 \\n  setpixelcolor(address,value) {\\n    storeHex(address,value);\\n    return_i32 0;\\n}\\n\\nfunction hypot(a,b) { \\n  return sqrt(a*a+b*b);\\n}\\nfunction helper(xt,yt,sc,cc) {\\n   return hypot(xt-sc,yt-cc)*0.25;\\n}\\nlet_i32 loopx = 0;\\nlet_i32 loopy = 0;\\nlet_i32 address = 0;\\n\\nlet help = 0;\\n\\nlet xf = 0;\\nlet yf = 0;\\n\\nlet tf = 0;\\nlet tf2 = 0;\\nlet tf3 = 0;\\nlet tf4 = 0;\\nlet tf5 = 0;\\nlet tf6 = 0;\\n\\nlet sliderhelper = 0;\\nsliderhelper = slider * 2.0;\\n\\nlet sliderhelper2 = 0;\\nsliderhelper2 = slider2 * 2.0;\\n\\ntf = (width/2)+\\n    sin((time/500)*2)*sliderhelper;\\ntf3 = (height/2)+\\n   sin(0.7+(time/500)*1.2)*sliderhelper;\\n\\ntf2 = (width/2)+\\n     sin((time/750)*0.8)*sliderhelper2;\\ntf4 = (height/2)+\\n     sin(0.7+(time/750)*1.6)*sliderhelper2;\\n\\ntf5 = (width/2)+\\n     sin(0.35+(time/750)*1.5)*sliderhelper2;\\ntf6 = (height/2)+\\n     sin(1.05+(time/750)*1.8)*sliderhelper2;\\n\\nlet colorfactorhelper = 0;\\ncolorfactorhelper = colorfactor * 2.55;\\n\\nlet rangehelper = 0;\\nrangehelper = range * 2.55;\\n\\nlet_i32 maxloopheight = 0;\\nlet_i32 maxloopwidth = 0;\\nmaxloopheight= trunc_signed_f32_to_i32(height);\\nmaxloopwidth= trunc_signed_f32_to_i32(width);\\n\\nwhile_i32 (loopy<maxloopheight) {\\n  loopx = 0;\\n  while_i32 (loopx < maxloopwidth) {\\n    address = getaddress(loopx,loopy,maxloopwidth);\\n    \\n    yf = convert_signed_i32_to_f32(loopy);\\n    xf = convert_signed_i32_to_f32(loopx);\\n\\n    help = 256-\\n       helper(xf,yf,tf,tf3)*\\n       helper(xf,yf,tf2,tf4)*\\n       helper(xf,yf,tf5,tf6)\\n       /128;\\n\\n    if (help < 0) {\\n      help = 0;\\n    }\\n    if (help > 255) {\\n      help = 255;\\n    }\\n    if (help > (255-rangehelper)) {\\n      setpixel(\\n        address, \\n        trunc_signed_f32_to_i32(help),\\n      trunc_signed_f32_to_i32(colorfactorhelper),\\n        0\\n      ); \\n    } else {\\n// send this as i64?\\n// format is bgr\\n//setpixelcolor(address, 0xff0000);\\n      setpixel(\\n        address, \\n        0,\\n        mapvalue(0,255,0,maxloopheight,\\n          loopy),\\n        mapvalue(0,255,0,maxloopwidth,\\n          loopx)\\n      );\\n       \\n    }\\n\\n    loopx = loopx + 1;\\n  }\\n  loopy = loopy + 1;\\n}\\nreturn 0;\",\"width\":500,\"htmlPlugin\":\"formNode\"}","preset":"07fd810a-e385-4fce-bbb6-2b70a5d12091","name":"Metaballs"},{"data":"{\"outputProperty\":\"script\",\"rows\":10,\"script\":\"function_i32 getaddress(xx,yy,maxwidth) {\\n  return_i32 yy*maxwidth*4+xx*4;\\n}\\nfunction distance(xx,yy,xa,ya) {\\n  return sqrt((xx-xa)*(xx-xa) + (yy-ya)*(yy-ya));\\n}\\nfunction_i32 setpixel(address,value) {\\n  store(address,value,0,0);\\n  return_i32 0;\\n}\\nfunction hypot(a,b) { \\n    return sqrt(a*a+b*b);\\n}\\nlet_i32 loopx = 0;\\nlet_i32 loopy = 0;\\nlet_i32 address = 0;\\nlet help = 0;\\nlet_i32 help2 = 0;\\nlet xf = 0;\\nlet yf = 0;\\n\\nlet cx = 0;\\nlet cy = 0;\\nlet cx2 = 0;\\nlet cy2 = 0;\\n\\nlet tf = 0;\\nlet tf2 = 0;\\nlet tf3 = 0;\\nlet tf4 = 0;\\nlet halfwidth = 0;\\nlet halfheight = 0;\\nhalfwidth = width/2;\\nhalfheight = height/2;\\ncx = halfwidth+halfwidth*sin(time/3000);\\ncy = halfheight+halfheight*sin(0.7+time/5000);\\n\\ntf =  sin(time/20000) *0.0065;\\ntf2 = (0.5*sin(time/3000))+8;\\n\\ncx2 = halfwidth+halfwidth*sin(time/1000);\\ncy2 = halfheight+halfheight*sin(0.7+time/2000);\\n\\ntf3  =  sin(time/2000) *0.0065;\\ntf4 = (0.25*sin(time/2000))+10;\\n\\nlet_i32 maxloopheight = 0;\\nlet_i32 maxloopwidth = 0;\\nmaxloopheight= trunc_signed_f32_to_i32(height);\\nmaxloopwidth= trunc_signed_f32_to_i32(width);\\n\\nwhile_i32 (loopy<maxloopheight) {\\n  loopx = 0;\\n  while_i32 (loopx < maxloopwidth) {\\n    address = getaddress(loopx,loopy,maxloopwidth);\\n    \\n    yf = convert_signed_i32_to_f32(loopy);\\n    xf = convert_signed_i32_to_f32(loopx);\\n\\n    help = (width/2)+sin(\\n     distance(xf,yf,cx,cy) * tf * tf2+\\n     distance(xf,yf,cx2,cy2) * tf3 * tf4)\\n       * (width/2);\\n\\n    setpixel(address, trunc_signed_f32_to_i32(help));\\n    loopx = loopx + 1;\\n  }\\n  loopy = loopy + 1;\\n}\\nreturn 0;\",\"width\":500,\"htmlPlugin\":\"formNode\"}","preset":"1ba322c1-ba3f-46dd-bde0-791f51e0c2a2","name":"test"}]}}